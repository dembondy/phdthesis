%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 7.
%%Title: C:\Users\guco\Dropbox\Publications\PSCC2014\psccpaper\figures\nonflexload.eps
%%CreationDate: 12/12/2013  13:07:39
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    15   309   579   532
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    15   309   579   532
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0180 6384 csm

    0     0  6774  2674 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6775 2675 rf
6 w
0 2151 5248 0 0 -2151 881 2357 4 MP
PP
-5248 0 0 2151 5248 0 0 -2151 881 2357 5 MP stroke
4 w
DO
0 sg
 881 2357 mt  881  206 L
 881  206 mt  881  206 L
1757 2357 mt 1757  206 L
1757  206 mt 1757  206 L
2634 2357 mt 2634  206 L
2634  206 mt 2634  206 L
3510 2357 mt 3510  206 L
3510  206 mt 3510  206 L
4387 2357 mt 4387  206 L
4387  206 mt 4387  206 L
5264 2357 mt 5264  206 L
5264  206 mt 5264  206 L
 881 2199 mt 6130 2199 L
6130 2199 mt 6130 2199 L
 881 1885 mt 6130 1885 L
6130 1885 mt 6130 1885 L
 881 1571 mt 6130 1571 L
6130 1571 mt 6130 1571 L
 881 1257 mt 6130 1257 L
6130 1257 mt 6130 1257 L
 881  942 mt 6130  942 L
6130  942 mt 6130  942 L
 881  628 mt 6130  628 L
6130  628 mt 6130  628 L
 881  314 mt 6130  314 L
6130  314 mt 6130  314 L
SO
6 w
 881  206 mt 6129  206 L
 881 2357 mt 6129 2357 L
6129 2357 mt 6129  206 L
 881 2357 mt  881  206 L
 881 2357 mt 6129 2357 L
 881 2357 mt  881  206 L
 881 2357 mt  881 2304 L
 881  206 mt  881  258 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 848 2502 mt 
(0) s
1757 2357 mt 1757 2304 L
1757  206 mt 1757  258 L
1691 2502 mt 
(20) s
2634 2357 mt 2634 2304 L
2634  206 mt 2634  258 L
2568 2502 mt 
(40) s
3510 2357 mt 3510 2304 L
3510  206 mt 3510  258 L
3444 2502 mt 
(60) s
4387 2357 mt 4387 2304 L
4387  206 mt 4387  258 L
4321 2502 mt 
(80) s
5264 2357 mt 5264 2304 L
5264  206 mt 5264  258 L
5164 2502 mt 
(100) s
 881 2199 mt  933 2199 L
6130 2199 mt 6077 2199 L
 713 2243 mt 
(15) s
 881 1885 mt  933 1885 L
6130 1885 mt 6077 1885 L
 713 1929 mt 
(20) s
 881 1571 mt  933 1571 L
6130 1571 mt 6077 1571 L
 713 1615 mt 
(25) s
 881 1257 mt  933 1257 L
6130 1257 mt 6077 1257 L
 713 1301 mt 
(30) s
 881  942 mt  933  942 L
6130  942 mt 6077  942 L
 713  986 mt 
(35) s
 881  628 mt  933  628 L
6130  628 mt 6077  628 L
 713  672 mt 
(40) s
 881  314 mt  933  314 L
6130  314 mt 6077  314 L
 713  358 mt 
(45) s
 881  206 mt 6129  206 L
 881 2357 mt 6129 2357 L
6129 2357 mt 6129  206 L
 881 2357 mt  881  206 L
gs 881 206 5250 2152 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
10 0 11 0 11 0 0 392 11 0 11 0 11 0 11 0 
0 417 11 0 11 0 11 0 11 0 0 297 11 0 11 0 
11 0 11 0 0 247 11 0 11 0 11 0 11 0 0 330 
11 0 11 0 11 0 11 0 0 14 10 0 11 0 11 0 
11 0 0 -499 11 0 11 0 11 0 11 0 0 -695 11 0 
11 0 11 0 11 0 0 -258 11 0 11 0 11 0 11 0 
0 -110 11 0 11 0 11 0 11 0 0 37 11 0 11 0 
11 0 11 0 0 27 10 0 11 0 11 0 11 0 0 6 
11 0 11 0 11 0 11 0 0 22 11 0 11 0 11 0 
11 0 0 115 11 0 11 0 11 0 11 0 0 139 11 0 
11 0 11 0 11 0 0 -212 11 0 11 0 11 0 11 0 
0 -394 10 0 11 0 11 0 11 0 0 -170 11 0 11 0 
11 0 11 0 0 -17 11 0 11 0 11 0 11 0 0 -9 
11 0 11 0 11 0 11 0 0 26 11 0 11 0 11 0 
11 0 0 81 11 0 11 0 11 0 11 0 0 209 10 0 
11 0 11 0 11 0 0 393 11 0 11 0 11 0 11 0 
0 438 11 0 11 0 11 0 11 0 0 340 11 0 11 0 
11 0 11 0 0 232 11 0 11 0 11 0 11 0 0 332 
11 0 11 0 11 0 11 0 0 70 10 0 11 0 11 0 
11 0 0 -583 11 0 11 0 11 0 11 0 0 -680 11 0 
11 0 11 0 11 0 0 -319 11 0 11 0 11 0 11 0 
0 -106 11 0 11 0 11 0 11 0 0 44 11 0 11 0 
11 0 11 0 0 -11 10 0 11 0 11 0 11 0 0 107 
11 0 11 0 11 0 11 0 0 35 11 0 11 0 11 0 
11 0 0 30 11 0 11 0 11 0 11 0 0 150 11 0 
11 0 11 0 11 0 0 -176 11 0 11 0 11 0 11 0 
0 -394 10 0 11 0 11 0 11 0 0 -180 11 0 11 0 
11 0 11 0 0 -15 11 0 11 0 11 0 11 0 0 -9 
11 0 11 0 11 0 11 0 0 22 11 0 11 0 11 0 
11 0 0 107 11 0 11 0 11 0 11 0 0 217 10 0 
11 0 11 0 11 0 0 403 11 0 11 0 11 0 11 0 
0 388 11 0 11 0 11 0 11 0 0 336 11 0 11 0 
11 0 11 0 0 270 11 0 11 0 11 0 11 0 0 351 
11 0 11 0 11 0 11 0 0 43 10 0 11 0 11 0 
11 0 0 -578 11 0 11 0 11 0 11 0 0 -636 11 0 
11 0 11 0 11 0 0 -299 11 0 11 0 11 0 11 0 
0 -92 11 0 11 0 11 0 11 0 0 -34 11 0 11 0 
11 0 11 0 0 25 3510 1820 300 MP stroke
10 0 11 0 11 0 11 0 0 62 11 0 11 0 11 0 
11 0 0 4 11 0 11 0 11 0 11 0 0 46 11 0 
11 0 11 0 11 0 0 148 11 0 11 0 11 0 11 0 
0 -255 11 0 11 0 11 0 11 0 0 -353 10 0 11 0 
11 0 11 0 0 -158 11 0 11 0 11 0 11 0 0 -29 
11 0 11 0 11 0 11 0 0 4 11 0 11 0 11 0 
11 0 0 21 11 0 11 0 11 0 11 0 0 108 11 0 
11 0 11 0 11 0 0 198 10 0 11 0 11 0 11 0 
0 381 11 0 11 0 11 0 11 0 0 410 11 0 11 0 
11 0 11 0 0 303 11 0 11 0 11 0 11 0 0 341 
11 0 11 0 11 0 11 0 0 352 11 0 11 0 11 0 
11 0 0 -24 10 0 11 0 11 0 11 0 0 -480 11 0 
11 0 11 0 11 0 0 -588 11 0 11 0 11 0 11 0 
0 -298 11 0 11 0 11 0 11 0 0 -11 11 0 11 0 
11 0 11 0 0 -2 11 0 11 0 11 0 11 0 0 -1 
10 0 11 0 11 0 11 0 0 47 11 0 11 0 11 0 
11 0 0 -77 11 0 11 0 11 0 11 0 0 -32 11 0 
11 0 11 0 11 0 0 12 11 0 11 0 11 0 11 0 
0 -254 11 0 11 0 11 0 11 0 0 -242 10 0 11 0 
11 0 11 0 0 -116 11 0 11 0 11 0 11 0 0 18 
11 0 11 0 11 0 11 0 0 31 11 0 11 0 11 0 
11 0 0 67 11 0 11 0 11 0 11 0 0 122 11 0 
11 0 11 0 11 0 0 145 10 0 11 0 11 0 11 0 
0 289 11 0 11 0 11 0 11 0 0 335 11 0 11 0 
11 0 11 0 0 246 11 0 11 0 11 0 11 0 0 307 
11 0 11 0 11 0 11 0 0 404 11 0 11 0 11 0 
11 0 0 79 10 0 11 0 11 0 11 0 0 -377 11 0 
11 0 11 0 11 0 0 -460 11 0 11 0 11 0 11 0 
0 -219 11 0 11 0 11 0 11 0 0 7 11 0 11 0 
11 0 11 0 0 -4 11 0 11 0 11 0 11 0 0 -51 
10 0 11 0 11 0 11 0 0 -72 11 0 11 0 11 0 
11 0 0 -233 11 0 11 0 11 0 11 0 0 -346 11 0 
11 0 11 0 11 0 0 -124 11 0 11 0 11 0 11 0 
0 -69 11 0 11 0 11 0 11 0 0 -74 10 0 11 0 
11 0 11 0 0 60 11 0 11 0 11 0 11 0 0 132 
11 0 11 0 11 0 11 0 0 191 11 0 11 0 11 0 
11 0 0 174 11 0 11 0 11 0 11 0 0 158 11 0 
11 0 11 0 10 0 881 1567 300 MP stroke
gr

c8
0 sg
2774  111 mt 
(Non flexible residential load) s
 631 1759 mt  -90 rotate
(Active power [kW]) s
90 rotate
3171 2645 mt 
(Time [hours]) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
